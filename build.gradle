buildscript {
	repositories {
		mavenLocal()
		maven { url "https://repo1.maven.org/maven2" }
	}
	dependencies {
		classpath "org.openapitools:openapi-generator-gradle-plugin:3.3.4"
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id "org.openapi.generator" version "4.3.1"
	id 'java'
}

group = 'com.bitzero'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '10'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.flywaydb:flyway-core:6.5.5'
	compile 'org.springframework.session:spring-session-jdbc'
	compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.2.2.RELEASE'
	compile 'org.springframework.security:spring-security-oauth2-jose:5.3.2.RELEASE'
	compile 'org.springframework.security:spring-security-oauth2-client:5.3.2.RELEASE'
	compile 'org.springframework.security:spring-security-core:5.3.2.RELEASE'
	compile 'org.springframework.boot:spring-boot-starter-webflux:2.3.3.RELEASE'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
